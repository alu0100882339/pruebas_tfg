#! /bin/sh 
#
#  This script generates a suitable cll.PAPI_EVENTS.h 
#  from cll.PAPI_EVENTS.skel.h and the list in here.
#

typeset -i NUM_EV
NUM_EV=0

OUTPUT=cll.PAPI3_EVENTS.h
echo "/* File: $OUTPUT; Automatically generated by $0 */" >$OUTPUT

# Look for "papiStdEventDefs.h"
PAPISTDEVENTDEFS_H=/usr/include/papiStdEventDefs.h
if test ! -r $PAPISTDEVENTDEFS_H; then
	PAPISTDEVENTDEFS_H=/usr/local/include/papiStdEventDefs.h
fi

# Definitions and explanations are after the "for"
for PAPI_EV in \
`sed -n '/^#define[ \t][ \t]*PAPI_[A-Za-z0-9_]*[ \t][ \t]*(PAPI_[A-Za-z0-9_]*[ \t][ \t]*|[ \t][ \t]*PAPI_[A-Za-z0-9_]*)/{
         s/^#define[ \t][ \t]*PAPI_//
         s/[ \t][ \t]*(PAPI_[A-Za-z0-9_]*[ \t][ \t]*|[ \t][ \t]*PAPI_[A-Za-z0-9_]*).*//
         p}' $PAPISTDEVENTDEFS_H`
# `sed -n '/^#define[ \t][ \t]*PAPI_\([^ \t][^ \t]*\)[ \t][ \t]*0x.*/{
#          s/^#define[ \t][ \t]*PAPI_\([^ \t][^ \t]*\)[ \t][ \t]*0x.*/\1/
#          p
#          }' $PAPISTDEVENTDEFS_H`
do

	perl -p -e "s/EVENT/$PAPI_EV/g" cll.PAPI_EVENT.skel.h >> $OUTPUT

	let "NUM_EV=NUM_EV + 1"
done

echo "/* This file defines $NUM_EV different PAPI events */" >> $OUTPUT
echo " " >> $OUTPUT

# The following list has bin extracted from "papiStdEventDefs.h"
#
#    PAPI_L1_DCM  is Level 1 data cache misses
#    PAPI_L1_ICM  is Level 1 instruction cache misses 
#    PAPI_L2_DCM  is Level 2 data cache misses
#    PAPI_L2_ICM  is Level 2 instruction cache misses 
#    PAPI_L3_DCM  is Level 3 data cache misses
#    PAPI_L3_ICM  is Level 3 instruction cache misses
#    PAPI_L1_TCM  is Level 1 total cache misses
#    PAPI_L2_TCM  is Level 2 total cache misses
#    PAPI_L3_TCM  is Level 3 total cache misses
#    PAPI_CA_SNP  is Snoops
#    PAPI_CA_SHR  is Request for shared cache line (SMP)
#    PAPI_CA_CLN  is Request for clean cache line (SMP)
#    PAPI_CA_INV  is Request for cache line Invalidation (SMP)
#    PAPI_CA_ITV  is Request for cache line Intervention (SMP)
#    PAPI_L3_LDM  is Level 3 load misses 
#    PAPI_L3_STM  is Level 3 store misses 
#    PAPI_BRU_IDL is Cycles branch units are idle
#    PAPI_FXU_IDL is Cycles integer units are idle
#    PAPI_FPU_IDL is Cycles floating point units are idle
#    PAPI_LSU_IDL is Cycles loadstore units are idle
#    PAPI_TLB_DM  is Data translation lookaside buffer misses
#    PAPI_TLB_IM  is Instr translation lookaside buffer misses
#    PAPI_TLB_TL  is Total translation lookaside buffer misses
#    PAPI_L1_LDM  is Level 1 load misses 
#    PAPI_L1_STM  is Level 1 store misses 
#    PAPI_L2_LDM  is Level 2 load misses 
#    PAPI_L2_STM  is Level 2 store misses 
#    PAPI_BTAC_M  is BTAC miss
#    PAPI_PRF_DM  is Prefetch data instruction caused a miss 
#    PAPI_L3_DCH  is Level 3 Data Cache Hit
#    PAPI_TLB_SD  is Xlation lookaside buffer shootdowns (SMP)
#    PAPI_CSR_FAL is Failed store conditional instructions
#    PAPI_CSR_SUC is Successful store conditional instructions
#    PAPI_CSR_TOT is Total store conditional instructions
#    PAPI_MEM_SCY is Cycles Stalled Waiting for Memory Access
#    PAPI_MEM_RCY is Cycles Stalled Waiting for Memory Read
#    PAPI_MEM_WCY is Cycles Stalled Waiting for Memory Write
#    PAPI_STL_ICY is Cycles with No Instruction Issue
#    PAPI_FUL_ICY is Cycles with Maximum Instruction Issue
#    PAPI_STL_CCY is Cycles with No Instruction Completion
#    PAPI_FUL_CCY is Cycles with Maximum Instruction Completion
#    PAPI_HW_INT  is Hardware interrupts 
#    PAPI_BR_UCN  is Unconditional branch instructions executed
#    PAPI_BR_CN   is Conditional branch instructions executed
#    PAPI_BR_TKN  is Conditional branch instructions taken
#    PAPI_BR_NTK  is Conditional branch instructions not taken
#    PAPI_BR_MSP  is Conditional branch instructions mispred
#    PAPI_BR_PRC  is Conditional branch instructions corr. pred
#    PAPI_FMA_INS is FMA instructions completed
#    PAPI_TOT_IIS is Total instructions issued
#    PAPI_TOT_INS is Total instructions executed
#    PAPI_INT_INS is Integer instructions executed
#    PAPI_FP_INS  is Floating point instructions executed
#    PAPI_LD_INS  is Load instructions executed
#    PAPI_SR_INS  is Store instructions executed
#    PAPI_BR_INS  is Total branch instructions executed
#    PAPI_VEC_INS is VectorSIMD instructions executed
#    PAPI_FLOPS   is Floating Point instructions per second 
#    PAPI_RES_STL is Cycles processor is stalled on resource
#    PAPI_FP_STAL is Cycles any FP units are stalled 
#    PAPI_TOT_CYC is Total cycles
#    PAPI_IPS     is Instructions executed per second
#    PAPI_LST_INS is Total loadstore inst. executed
#    PAPI_SYC_INS is Sync. inst. executed 
#    PAPI_L1_DCH  is L1 D Cache Hit
#    PAPI_L2_DCH  is L2 D Cache Hit
#    PAPI_L1_DCA  is L1 D Cache Access
#    PAPI_L2_DCA  is L2 D Cache Access
#    PAPI_L3_DCA  is L3 D Cache Access
#    PAPI_L1_DCR  is L1 D Cache Read
#    PAPI_L2_DCR  is L2 D Cache Read
#    PAPI_L3_DCR  is L3 D Cache Read
#    PAPI_L1_DCW  is L1 D Cache Write
#    PAPI_L2_DCW  is L2 D Cache Write
#    PAPI_L3_DCW  is L3 D Cache Write
#    PAPI_L1_ICH  is L1 instruction cache hits
#    PAPI_L2_ICH  is L2 instruction cache hits
#    PAPI_L3_ICH  is L3 instruction cache hits
#    PAPI_L1_ICA  is L1 instruction cache accesses
#    PAPI_L2_ICA  is L2 instruction cache accesses
#    PAPI_L3_ICA  is L3 instruction cache accesses
#    PAPI_L1_ICR  is L1 instruction cache reads
#    PAPI_L2_ICR  is L2 instruction cache reads
#    PAPI_L3_ICR  is L3 instruction cache reads
#    PAPI_L1_ICW  is L1 instruction cache writes
#    PAPI_L2_ICW  is L2 instruction cache writes
#    PAPI_L3_ICW  is L3 instruction cache writes
#    PAPI_L1_TCH  is L1 total cache hits
#    PAPI_L2_TCH  is L2 total cache hits
#    PAPI_L3_TCH  is L3 total cache hits
#    PAPI_L1_TCA  is L1 total cache accesses
#    PAPI_L2_TCA  is L2 total cache accesses
#    PAPI_L3_TCA  is L3 total cache accesses
#    PAPI_L1_TCR  is L1 total cache reads
#    PAPI_L2_TCR  is L2 total cache reads
#    PAPI_L3_TCR  is L3 total cache reads
#    PAPI_L1_TCW  is L1 total cache writes
#    PAPI_L2_TCW  is L2 total cache writes
#    PAPI_L3_TCW  is L3 total cache writes
#    PAPI_FML_INS is FM ins 
#    PAPI_FAD_INS is FA ins 
#    PAPI_FDV_INS is FD ins 
#    PAPI_FSQ_INS is FSq ins 
#    PAPI_FNV_INS is Finv ins 

